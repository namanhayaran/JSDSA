function nextPermutation(nums) {
    let i = nums.length - 2;
    
    // Find the first decreasing element from the end
    while (i >= 0 && nums[i] >= nums[i + 1]) {
        i--;
    }
    
    if (i >= 0) {
        let j = nums.length - 1;
        
        // Find the first element larger than nums[i] from the end
        while (nums[j] <= nums[i]) {
            j--;
        }
        
        // Swap nums[i] and nums[j]
        [nums[i], nums[j]] = [nums[j], nums[i]];
    }
    
    // Reverse the elements after index i
    let start = i + 1;
    let end = nums.length - 1;
    while (start < end) {
        [nums[start], nums[end]] = [nums[end], nums[start]];
        start++;
        end--;
    }
}

// Example usage
let arr = [1, 2, 3];
nextPermutation(arr);
console.log(arr); // Output: [1, 3, 2]

arr = [3, 2, 1];
nextPermutation(arr);
console.log(arr); // Output: [1, 2, 3]

arr = [1, 1, 5];
nextPermutation(arr);
console.log(arr); // Output: [1, 5, 1]
