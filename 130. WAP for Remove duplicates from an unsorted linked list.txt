// Define a Node class
class Node {
    constructor(data) {
        this.data = data;
        this.next = null;
    }
}

// Function to remove duplicates from the linked list
function removeDuplicates(head) {
    if (head === null) return null;

    let current = head;
    let prev = null;
    let seen = new Set();

    while (current !== null) {
        if (seen.has(current.data)) {
            // Duplicate found, remove it
            prev.next = current.next;
        } else {
            // Not a duplicate, add to the set
            seen.add(current.data);
            prev = current;
        }
        current = current.next;
    }

    return head;
}

// Function to print the linked list
function printList(head) {
    let current = head;
    while (current !== null) {
        process.stdout.write(current.data + " ");
        current = current.next;
    }
    console.log();
}

// Helper function to create a linked list from an array
function createLinkedList(arr) {
    if (arr.length === 0) return null;
    let head = new Node(arr[0]);
    let current = head;
    for (let i = 1; i < arr.length; i++) {
        current.next = new Node(arr[i]);
        current = current.next;
    }
    return head;
}

// Example usage
let values = [5, 2, 2, 4];
let head = createLinkedList(values);
console.log("Original list:");
printList(head);

head = removeDuplicates(head);
console.log("List after removing duplicates:");
printList(head);
