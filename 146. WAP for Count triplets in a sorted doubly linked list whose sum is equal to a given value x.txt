class Node {
  constructor(data) {
    this.data = data;
    this.next = null;
    this.prev = null;
  }
}

class DoublyLinkedList {
  constructor() {
    this.head = null;
  }

  // Function to add a new node at the end
  append(data) {
    let newNode = new Node(data);
    if (this.head === null) {
      this.head = newNode;
      return;
    }
    let temp = this.head;
    while (temp.next !== null) {
      temp = temp.next;
    }
    temp.next = newNode;
    newNode.prev = temp;
  }

  // Function to count triplets with a given sum
  countTriplets(sum) {
    let count = 0;
    let first, second, third;

    // Fix the first node as the first element and iterate
    for (first = this.head; first !== null; first = first.next) {
      // Initialize second to the node after first
      for (second = first.next; second !== null; second = second.next) {
        // Initialize third to the node after second
        third = second.next;
        while (third !== null) {
          if (first.data + second.data + third.data === sum) {
            count++;
          }
          third = third.next;
        }
      }
    }

    return count;
  }
}

// Example usage
let dll = new DoublyLinkedList();
dll.append(1);
dll.append(2);
dll.append(4);
dll.append(5);
dll.append(6);
dll.append(8);
dll.append(9);

let x = 17;
console.log("Number of triplets with sum " + x + " is " + dll.countTriplets(x));
