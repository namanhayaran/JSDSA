function maxSumPath(seq1, seq2) {
    let i = 0, j = 0;
    let sum1 = 0, sum2 = 0;
    let maxSum = 0;

    while (i < seq1.length && j < seq2.length) {
        if (seq1[i] < seq2[j]) {
            sum1 += seq1[i++];
        } else if (seq1[i] > seq2[j]) {
            sum2 += seq2[j++];
        } else {
            // Intersection point
            sum1 += seq1[i];
            sum2 += seq2[j];
            maxSum += Math.max(sum1, sum2);
            sum1 = 0;
            sum2 = 0;
            i++;
            j++;
        }
    }

    // Add remaining elements of seq1
    while (i < seq1.length) {
        sum1 += seq1[i++];
    }

    // Add remaining elements of seq2
    while (j < seq2.length) {
        sum2 += seq2[j++];
    }

    maxSum += Math.max(sum1, sum2);

    return maxSum;
}

function processInput(input) {
    let lines = input.trim().split('\n');
    let result = [];

    for (let i = 0; i < lines.length; i += 2) {
        if (lines[i] === '0') break;
        let seq1 = lines[i].split(' ').slice(1).map(Number);
        let seq2 = lines[i + 1].split(' ').slice(1).map(Number);
        result.push(maxSumPath(seq1, seq2));
    }

    return result.join('\n');
}

// Sample input
let input = `13 3 5 7 9 20 25 30 40 55 56 57 60 62
11 1 4 7 11 14 25 44 47 55 57 100
4 -5 100 1000 1005
3 -12 1000 1001
0`;

console.log(processInput(input));