function countTriplets(arr, N, sum) {
    // Sort the array
    arr.sort((a, b) => a - b);
    
    let count = 0;
    
    // Fix the first element as arr[i]
    for (let i = 0; i < N - 2; i++) {
        // Initialize other two elements as corner elements of the subarray arr[j+1..N-1]
        let j = i + 1, k = N - 1;
        
        // Use Meet in the Middle concept
        while (j < k) {
            // If sum of current triplet is less than the given sum, then count all triplets between j and k
            if (arr[i] + arr[j] + arr[k] < sum) {
                // All triplets arr[i], arr[j], arr[l] where j < l <= k
                count += (k - j);
                j++;
            } else {
                // If sum is greater, move to smaller value
                k--;
            }
        }
    }
    
    return count;
}

// Example usage:
let arr = [-2, 0, 1, 3];
let N = arr.length;
let sum = 2;

console.log(countTriplets(arr, N, sum)); // Output: 2
