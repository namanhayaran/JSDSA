class ListNode {
    constructor(value) {
        this.value = value;
        this.next = null;
    }
}

function removeDuplicates(head) {
    let current = head;
    
    while (current && current.next) {
        if (current.value === current.next.value) {
            current.next = current.next.next; // Skip the duplicate node
        } else {
            current = current.next; // Move to the next node
        }
    }
    
    return head;
}

// Helper function to create a linked list from an array
function createLinkedList(arr) {
    if (arr.length === 0) return null;
    
    let head = new ListNode(arr[0]);
    let current = head;
    
    for (let i = 1; i < arr.length; i++) {
        current.next = new ListNode(arr[i]);
        current = current.next;
    }
    
    return head;
}

// Helper function to print the linked list
function printLinkedList(head) {
    let current = head;
    let result = [];
    
    while (current) {
        result.push(current.value);
        current = current.next;
    }
    
    console.log(result.join(" "));
}

// Example usage:
let head = createLinkedList([2, 2, 4, 5]);
head = removeDuplicates(head);
printLinkedList(head); // Output: 2 4 5
