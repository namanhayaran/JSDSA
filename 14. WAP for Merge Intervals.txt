function mergeIntervals(intervals) {
    if (intervals.length <= 1) {
        return intervals;
    }

    // Step 1: Sort the intervals by their start time
    intervals.sort((a, b) => a[0] - b[0]);

    const merged = [];
    let previous = intervals[0];

    for (let i = 1; i < intervals.length; i++) {
        const current = intervals[i];

        // Step 2: Check if the current interval overlaps with the previous one
        if (current[0] <= previous[1]) {
            // Merge the current interval with the previous one
            previous[1] = Math.max(previous[1], current[1]);
        } else {
            // No overlap, add the previous interval to the result
            merged.push(previous);
            previous = current;
        }
    }

    // Add the last interval
    merged.push(previous);

    // Step 3: Return the merged intervals
    return merged;
}

// Example usage
const intervals = [[1, 3], [2, 6], [8, 10], [15, 18]];
console.log(mergeIntervals(intervals));
