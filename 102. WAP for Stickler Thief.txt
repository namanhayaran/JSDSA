function maxLoot(n, a) {
    if (n === 0) return 0;
    if (n === 1) return a[0];
    
    // Initialize the dp array
    let dp = new Array(n).fill(0);
    
    // Base cases
    dp[0] = a[0];
    dp[1] = Math.max(a[0], a[1]);
    
    // Fill the dp array using the recurrence relation
    for (let i = 2; i < n; i++) {
        dp[i] = Math.max(dp[i-1], a[i] + dp[i-2]);
    }
    
    // The last element of dp array contains the result
    return dp[n-1];
}

// Example usage:
const n = 5;
const a = [6, 5, 5, 7, 4];
console.log(maxLoot(n, a));  // Output: 15
