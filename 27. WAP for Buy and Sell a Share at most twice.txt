function maxProfit(prices) {
  let n = prices.length;
  if (n <= 1) return 0;

  let leftProfit = new Array(n).fill(0);
  let rightProfit = new Array(n).fill(0);

  let leftMin = prices[0];
  for (let i = 1; i < n; i++) {
    leftMin = Math.min(leftMin, prices[i]);
    leftProfit[i] = Math.max(leftProfit[i - 1], prices[i] - leftMin);
  }

  let rightMax = prices[n - 1];
  for (let i = n - 2; i >= 0; i--) {
    rightMax = Math.max(rightMax, prices[i]);
    rightProfit[i] = Math.max(rightProfit[i + 1], rightMax - prices[i]);
  }

  let maxProfit = 0;
  for (let i = 0; i < n; i++) {
    maxProfit = Math.max(maxProfit, leftProfit[i] + rightProfit[i]);
  }

  return maxProfit;
}

let prices = [10, 22, 5, 75, 65, 80];
console.log(maxProfit(prices)); // Expected Output: 87
