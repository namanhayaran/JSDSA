function findFirstNonRepeatingCharacters(stream) {
    const queue = [];
    const frequencyMap = {};
    const result = [];

    for (let i = 0; i < stream.length; i++) {
        const char = stream[i];

        // Update frequency map
        if (!frequencyMap[char]) {
            frequencyMap[char] = 0;
        }
        frequencyMap[char]++;

        // Add character to the queue if it appears for the first time
        if (frequencyMap[char] === 1) {
            queue.push(char);
        }

        // Remove characters from the queue that are no longer non-repeating
        while (queue.length > 0 && frequencyMap[queue[0]] > 1) {
            queue.shift();
        }

        // Append the first non-repeating character or '#' if none exists
        if (queue.length > 0) {
            result.push(queue[0]);
        } else {
            result.push('#');
        }
    }

    return result.join('');
}

// Example usage:
const inputStream = "aabc";
console.log(findFirstNonRepeatingCharacters(inputStream));  // Output: "a#bb"
